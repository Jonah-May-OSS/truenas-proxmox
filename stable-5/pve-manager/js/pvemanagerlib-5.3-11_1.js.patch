--- pvemanagerlib.js.orig	2019-02-20 13:40:43.000000000 -0500
+++ pvemanagerlib.js	2019-02-26 20:49:41.032327478 -0500
@@ -5920,6 +5920,7 @@
     alias: ['widget.pveiScsiProviderSelector'],
     comboItems: [
 	['comstar', 'Comstar'],
+	['truenas', 'TrueNAS-API'],
 	[ 'istgt', 'istgt'],
 	[ 'iet', 'IET'],
 	[ 'LIO', 'LIO']
@@ -30182,6 +30183,7 @@
 	data: {
 	    isLIO: false,
 	    isComstar: true,
+	    isTrueNAS: false,
 	    hasWriteCacheOption: true
 	}
     },
@@ -30194,10 +30196,26 @@
 	    }
 	},
 	changeISCSIProvider: function(f, newVal, oldVal) {
+	    var me = this;
 	    var vm = this.getViewModel();
 	    vm.set('isLIO', newVal === 'LIO');
 	    vm.set('isComstar', newVal === 'comstar');
-	    vm.set('hasWriteCacheOption', newVal === 'comstar' || newVal === 'istgt');
+	    vm.set('isTrueNAS', newVal === 'truenas');
+	    vm.set('hasWriteCacheOption', newVal === 'comstar' || newVal === 'truenas' || newVal === 'istgt');
+	    if (newVal !== 'truenas') {
+		me.lookupReference('truenas_use_ssl_field').setValue(false);
+		me.lookupReference('truenas_apiv4_host_field').setValue('');
+		me.lookupReference('truenas_user_field').setValue('');
+		me.lookupReference('truenas_user_field').allowBlank = true;
+		me.lookupReference('truenas_password_field').setValue('');
+		me.lookupReference('truenas_password_field').allowBlank = true;
+		me.lookupReference('truenas_confirmpw_field').setValue('');
+		me.lookupReference('truenas_confirmpw_field').allowBlank = true;
+	    } else {
+		me.lookupReference('truenas_user_field').allowBlank = false;
+		me.lookupReference('truenas_password_field').allowBlank = false;
+		me.lookupReference('truenas_confirmpw_field').allowBlank = false;
+	    }
 	}
     },
 
@@ -30215,6 +30233,7 @@
     },
 
     setValues: function diff(values) {
+	values.truenas_confirmpw = values.truenas_password;
 	values.writecache = values.nowritecache ? 0 : 1;
 	this.callParent([values]);
     },
@@ -30231,7 +30250,7 @@
 		allowBlank: false
 	    },
 	    {
-		xtype: me.isCreate ? 'textfield' : 'displayfield',
+		xtype: 'textfield',
 		name: 'pool',
 		value: '',
 		fieldLabel: gettext('Pool'),
@@ -30241,11 +30260,11 @@
 		xtype: me.isCreate ? 'textfield' : 'displayfield',
 		name: 'blocksize',
 		value: '4k',
-		fieldLabel: gettext('Block Size'),
+		fieldLabel: gettext('ZFS Block Size'),
 		allowBlank: false
 	    },
 	    {
-		xtype: me.isCreate ? 'textfield' : 'displayfield',
+		xtype: 'textfield',
 		name: 'target',
 		value: '',
 		fieldLabel: gettext('Target'),
@@ -30256,8 +30275,33 @@
 		name: 'comstar_tg',
 		value: '',
 		fieldLabel: gettext('Target group'),
-		bind: me.isCreate ? { disabled: '{!isComstar}' } : { hidden: '{!isComstar}' },
+		bind: {
+		    hidden: '{!isComstar}'
+		},
 		allowBlank: true
+	    },
+	    {
+		xtype: 'proxmoxcheckbox',
+		name: 'truenas_use_ssl',
+		reference: 'truenas_use_ssl_field',
+		inputId: 'truenas_use_ssl_field',
+		checked: false,
+		bind: {
+		    hidden: '{!isTrueNAS}'
+		},
+		uncheckedValue: 0,
+		fieldLabel: gettext('API use SSL')
+	    },
+	    {
+		xtype: 'textfield',
+		name: 'truenas_user',
+		reference: 'truenas_user_field',
+		inputId: 'truenas_user_field',
+		value: '',
+		fieldLabel: gettext('API Username'),
+		bind: {
+		    hidden: '{!isTrueNAS}'
+		}
 	    }
 	];
 
@@ -30288,7 +30332,9 @@
 		xtype: me.isCreate ? 'textfield' : 'displayfield',
 		name: 'comstar_hg',
 		value: '',
-		bind: me.isCreate ? { disabled: '{!isComstar}' } : { hidden: '{!isComstar}' },
+		bind: {
+		    hidden: '{!isComstar}'
+		},
 		fieldLabel: gettext('Host group'),
 		allowBlank: true
 	    },
@@ -30296,9 +30342,62 @@
 		xtype: me.isCreate ? 'textfield' : 'displayfield',
 		name: 'lio_tpg',
 		value: '',
-		bind: me.isCreate ? { disabled: '{!isLIO}' } : { hidden: '{!isLIO}' },
-		allowBlank: false,
-		fieldLabel: gettext('Target portal group')
+		bind: {
+		    hidden: '{!isLIO}'
+		},
+		fieldLabel: gettext('Target portal group'),
+		allowBlank: true
+	    },
+	    {
+		xtype: 'proxmoxtextfield',
+		name: 'truenas_apiv4_host',
+		reference: 'truenas_apiv4_host_field',
+		value: '',
+		editable: true,
+		emptyText: Proxmox.Utils.noneText,
+		bind: {
+		    hidden: '{!isTrueNAS}'
+		},
+		fieldLabel: gettext('API IPv4 Host'),
+	    },
+	    {
+		xtype: 'proxmoxtextfield',
+		name: 'truenas_password',
+		reference: 'truenas_password_field',
+		inputType: me.isCreate ? '' : 'password',
+		value: '',
+		editable: true,
+		emptyText: Proxmox.Utils.noneText,
+		bind: {
+		    hidden: '{!isTrueNAS}'
+		},
+		fieldLabel: gettext('API Password'),
+		change: function(f, value) {
+		    if (f.rendered) {
+			f.up().down('field[name=truenas_confirmpw]').validate();
+		    }
+		}
+	    },
+	    {
+		xtype: 'proxmoxtextfield',
+		name: 'truenas_confirmpw',
+		reference: 'truenas_confirmpw_field',
+		inputType: me.isCreate ? '' : 'password',
+		value: '',
+		editable: true,
+		submitValue: false,
+		emptyText: Proxmox.Utils.noneText,
+		bind: {
+		    hidden: '{!isTrueNAS}'
+		},
+		fieldLabel: gettext('Confirm Password'),
+		validator: function(value) {
+		    var pw = this.up().down('field[name=truenas_password]').getValue();
+		    if (pw !== value) {
+			return "Passwords do not match!";
+		    }
+		    return true;
+		}
 	    }
 	];
 
